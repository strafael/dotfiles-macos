#+TITLE: Doom Emacs Config
#+PROPERTY: header-args :tangle ./config.el :mkdirp yes

* About this config
This is my personal Emacs config, based on a bunch of resources I've found online. It takes advantage of Doom Emacs, which includes a number of extensions and configurations out of the box.

To use this file, open in Emacs and tangle with C-c C-v t which will extract all elips blocks in this file into config.el.

Use this file to every customization you need, as [[https://github.com/hlissner/doom-emacs/blob/develop/docs/getting_started.org#configure][Doom does not recommend the Emacs customize mechanism]]:

#+begin_quote
Note: do not use M-x customize or the customize API in general. Doom is designed to be configured programmatically from your config.el, which can conflict with Customize’s way of modifying variables.
#+end_quote

* General configuration
User information.
#+begin_src emacs-lisp
(setq user-full-name "Rafael Santos"
      user-mail-address "rafael.santos@electric.ai")
#+end_src

Disable exit confirmation.
#+begin_src emacs-lisp
(setq confirm-kill-emacs nil)
#+end_src

* Theme
#+begin_src emacs-lisp
(use-package doom-themes
  :ensure t
  :config
  (setq doom-themes-enable-bold t    ; if nil, bold is universally disabled
        doom-themes-enable-italic t) ; if nil, italics is universally disabled
  (load-theme 'doom-xcode t)

  (custom-set-faces!
    '(font-lock-comment-face :slant italic))) ; Show comments in italic
;; custom-set-faces must be used *after* the theme is loaded
#+end_src

* Fonts
Settings related to fonts within Doom Emacs:
- 'doom-font' -- standard monospace font that is used for most things in Emacs.
- 'doom-variable-pitch-font' -- variable font which is useful in some Emacs plugins.
- 'doom-big-font' -- used in doom-big-font-mode; useful for presentations.
- 'font-lock-comment-face' -- for comments.
- 'font-lock-keyword-face' -- for keywords with special significance, like ‘for’ and ‘if’ in C.

#+begin_src emacs-lisp
(setq doom-font (font-spec :family "Comic Code" :style 'Regular :size 13)
      doom-variable-pitch-font (font-spec :family "Comic Code" :size 14)
      doom-big-font (font-spec :family "Comic Code" :size 24))
;; (setq doom-font (font-spec :family "JetBrainsMono Nerd Font Mono" :style 'Regular :size 13)
;;       doom-variable-pitch-font (font-spec :family "JetBrainsMono Nerd Font Mono" :size 14)
;;       doom-big-font (font-spec :family "JetBrainsMono Nerd Font Mono" :size 24))

;; Give each line some room to breathe.
(setq-default line-spacing 0.3)
#+end_src

* Line settings
Toggle display-line-numbers-type so I have line numbers relative to the current
line. Doom Emacs uses 'SPC t' for "toggle" commands, so I choose 'SPC t t' for
toggle-truncate-lines.

#+begin_src emacs-lisp
(setq display-line-numbers-type 'relative)
(map! :leader
      :desc "Truncate lines"
      "t t" #'toggle-truncate-lines)
#+end_src

* lsp
#+begin_src emacs-lisp
(use-package lsp-mode
  :ensure t
  :config
  (use-package lsp-ui
    :ensure t
    :config
    (setq lsp-ui-doc-max-height 30
          lsp-ui-doc-max-width 150
          lsp-ui-doc-use-childframe t
          lsp-ui-doc-enable nil
          lsp-file-watch-ignored-directories '(".git" "node_modules" "venv" "build")))
  (use-package lsp-pylsp
    :ensure t
    :config
    (setq lsp-pylsp-plugins-pydocstyle-add-ignore ["D104" "D105" "D107" "D203" "D204" "D213" "D215" "D400" "D401" "D404" "D406" "D407" "D408" "D409" "D413" "D417"])))
#+end_src

** Virtual Environments

* Git timemachine with evil mode

#+begin_src emacs-lisp
(eval-after-load 'git-timemachine
  '(progn
     (evil-make-overriding-map git-timemachine-mode-map 'normal)
     ;; force update evil keymaps after git-timemachine-mode loaded
     (add-hook 'git-timemachine-mode-hook #'evil-normalize-keymaps)))
#+end_src

* Org-roam

#+begin_src emacs-lisp
(use-package org-roam
  :ensure t
  :config
  (setq org-roam-capture-templates
        '(("d" "default" plain "%?"
           :target (file+head "%<%Y%m%d%H%M%S>.org" "#+title: ${title}")
           :unnarrowed t))))

#+end_src
